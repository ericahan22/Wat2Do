# Generated by Django 4.2.7 on 2025-10-13 05:21

import hashlib
from django.db import migrations, models


def hash_existing_emails(apps, schema_editor):
    """Hash existing email addresses in the database"""
    NewsletterSubscriber = apps.get_model('newsletter', 'NewsletterSubscriber')
    
    for subscriber in NewsletterSubscriber.objects.all():
        if hasattr(subscriber, 'email') and subscriber.email:
            # Hash the existing email
            email_hash = hashlib.sha256(subscriber.email.lower().strip().encode('utf-8')).hexdigest()
            subscriber.email_hash = email_hash
            subscriber.save()


def reverse_hash_emails(apps, schema_editor):
    """This is not reversible - we can't unhash emails"""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ("newsletter", "0001_initial"),
    ]

    operations = [
        # Add the new email_hash field
        migrations.AddField(
            model_name='newslettersubscriber',
            name='email_hash',
            field=models.CharField(default='', max_length=128, help_text='SHA-256 hash of the email'),
            preserve_default=False,
        ),
        
        # Hash existing emails
        migrations.RunPython(hash_existing_emails, reverse_hash_emails),
        
        # Make email_hash unique
        migrations.AlterField(
            model_name='newslettersubscriber',
            name='email_hash',
            field=models.CharField(max_length=128, unique=True, help_text='SHA-256 hash of the email'),
        ),
        
        # Remove the old email field
        migrations.RemoveField(
            model_name='newslettersubscriber',
            name='email',
        ),
    ]
