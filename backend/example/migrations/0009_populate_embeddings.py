# Generated by Django 4.2.7 on 2025-09-21 15:20

from django.db import migrations
from example.embedding_utils import generate_event_embedding


def populate_embeddings(apps, schema_editor):
    """
    Populate existing events with embeddings.
    """
    with schema_editor.connection.cursor() as cursor:
        # Get all events that don't have embeddings
        cursor.execute(
            "SELECT id, name, location, food, club_handle FROM events WHERE embedding IS NULL"
        )
        events = cursor.fetchall()

        for event_id, name, location, food, club_handle in events:
            try:
                # Generate embedding for the event
                event_data = {
                    "name": name or "",
                    "location": location or "",
                    "food": food or "",
                    "club_handle": club_handle or "",
                }

                embedding = generate_event_embedding(event_data)

                # Update the event with the embedding
                cursor.execute(
                    "UPDATE events SET embedding = %s::vector WHERE id = %s",
                    [embedding, event_id],
                )

            except Exception as e:
                print(f"Error generating embedding for event {event_id}: {e}")
                continue


def reverse_populate_embeddings(apps, schema_editor):
    """
    Remove embeddings from events.
    """
    with schema_editor.connection.cursor() as cursor:
        cursor.execute("UPDATE events SET embedding = NULL")


class Migration(migrations.Migration):
    dependencies = [
        ("example", "0008_add_embedding_vector"),
    ]

    operations = [
        migrations.RunPython(
            populate_embeddings,
            reverse_populate_embeddings,
        ),
    ]
