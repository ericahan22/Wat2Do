# Generated by Django 4.2.7 on 2025-09-24 00:15

from django.db import migrations
from example.embedding_utils import generate_event_embedding


def regenerate_embeddings_simple(apps, schema_editor):
    """
    Regenerate all events with embeddings using only name, location, and food.
    This creates more focused embeddings for better semantic search.
    """
    with schema_editor.connection.cursor() as cursor:
        # Get all events
        cursor.execute("""
            SELECT id, name, location, food 
            FROM events 
        """)
        events = cursor.fetchall()
        
        total_events = len(events)
        print(f"Regenerating embeddings for {total_events} events using name, location, food only...")
        
        for i, (event_id, name, location, food) in enumerate(events, 1):
            try:
                # Generate embedding for the event using only core fields
                event_data = {
                    'name': name or '',
                    'location': location or '',
                    'food': food or '',
                }
                
                embedding = generate_event_embedding(event_data)
                
                # Update the event with the embedding
                cursor.execute(
                    "UPDATE events SET embedding = %s::vector WHERE id = %s",
                    [embedding, event_id]
                )
                
                if i % 10 == 0:  # Progress indicator
                    print(f"Processed {i}/{total_events} events...")
                
            except Exception as e:
                print(f"Error generating embedding for event {event_id} ({name}): {e}")
                continue
        
        print(f"Completed regenerating embeddings for {total_events} events using simplified data.")


def reverse_regenerate_embeddings_simple(apps, schema_editor):
    """
    Remove embeddings from events.
    """
    with schema_editor.connection.cursor() as cursor:
        cursor.execute("UPDATE events SET embedding = NULL")
        print("Removed all embeddings from events.")


class Migration(migrations.Migration):

    dependencies = [
        ("example", "0010_repopulate_embeddings"),
    ]

    operations = [
        migrations.RunPython(
            regenerate_embeddings_simple,
            reverse_regenerate_embeddings_simple,
        ),
    ]
